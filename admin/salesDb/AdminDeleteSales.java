/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javanexuspots.admin.salesDb;

import java.util.List;
import javanexuspots.admin.AdminMainPage;
import javanexuspots.services.ItemService;
import javanexuspots.loginPage.LoginSession;
import javanexuspots.models.InventoryUpdates;
import javanexuspots.models.Item;
import javanexuspots.models.SalesEntry;
import javanexuspots.services.InventoryUpdateService;
import javanexuspots.services.SalesEntryService;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Asus ROG
 */
public class AdminDeleteSales extends javax.swing.JFrame {
    
    private ItemService itemService;
    private SalesEntryService salesEntryService;
    
    /**
     * Creates new form AdminAddUser
     */
    public AdminDeleteSales() {
        initComponents();
        this.itemService = new ItemService();
        this.salesEntryService = new SalesEntryService();
        loadComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        DeleteSalesBtn = new javax.swing.JButton();
        CancelBtn = new javax.swing.JButton();
        salesIdCmbBox = new javax.swing.JComboBox<>();
        qtySoldField = new javax.swing.JLabel();
        dateField = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        ItemIdTxtField = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("SalesEntry ID:");

        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Date of Sale: ");

        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Quantity Sold:");

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Delete Sale Entry");

        DeleteSalesBtn.setBackground(new java.awt.Color(255, 0, 0));
        DeleteSalesBtn.setForeground(new java.awt.Color(255, 255, 255));
        DeleteSalesBtn.setText("Delete Sales Entry");
        DeleteSalesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteSalesBtnActionPerformed(evt);
            }
        });

        CancelBtn.setBackground(new java.awt.Color(153, 153, 153));
        CancelBtn.setForeground(new java.awt.Color(0, 0, 0));
        CancelBtn.setText("Cancel");
        CancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelBtnActionPerformed(evt);
            }
        });

        salesIdCmbBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salesIdCmbBoxActionPerformed(evt);
            }
        });

        qtySoldField.setBackground(new java.awt.Color(60, 60, 60));
        qtySoldField.setForeground(new java.awt.Color(0, 0, 0));
        qtySoldField.setText("Choose Item");

        dateField.setBackground(new java.awt.Color(60, 60, 60));
        dateField.setForeground(new java.awt.Color(0, 0, 0));
        dateField.setText("Choose Item");
        dateField.setToolTipText("");

        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Item ID:");

        ItemIdTxtField.setBackground(new java.awt.Color(60, 60, 60));
        ItemIdTxtField.setForeground(new java.awt.Color(0, 0, 0));
        ItemIdTxtField.setText("Choose Item");
        ItemIdTxtField.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(salesIdCmbBox, 0, 152, Short.MAX_VALUE)
                            .addComponent(ItemIdTxtField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(qtySoldField)
                            .addComponent(dateField))
                        .addGap(155, 155, 155))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DeleteSalesBtn)
                .addGap(191, 191, 191))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(salesIdCmbBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(dateField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(qtySoldField)
                    .addComponent(jLabel6)
                    .addComponent(ItemIdTxtField))
                .addGap(60, 60, 60)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DeleteSalesBtn)
                    .addComponent(CancelBtn))
                .addGap(72, 72, 72))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DeleteSalesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteSalesBtnActionPerformed
        String selectedSalesId = (String) salesIdCmbBox.getSelectedItem();

        // ensure a sales entry is selected
        if (selectedSalesId == null || selectedSalesId.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please select a sales entry to delete.", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this sales entry?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            try {
                // Find the sales entry to delete
                List<SalesEntry> salesEntries = salesEntryService.getAllSalesEntries();
                SalesEntry entryToDelete = null;

                for (SalesEntry entry : salesEntries) {
                    if (entry.getEntryId().equals(selectedSalesId)) {
                        entryToDelete = entry;
                        break;
                    }
                }

                if (entryToDelete == null) {
                    throw new IllegalArgumentException("Sales entry not found for the selected ID.");
                }

                // Update inventory: Add back sold quantity to stock
                List<Item> items = itemService.getAllItems();
                Item itemToUpdate = null;

                for (Item item : items) {
                    if (item.getItemId().equals(entryToDelete.getItemId())) {
                        itemToUpdate = item;
                        break;
                    }
                }

                if (itemToUpdate == null) {
                    throw new IllegalArgumentException("Item associated with the sales entry not found in inventory.");
                }

                itemToUpdate.setStockLevel(itemToUpdate.getStockLevel() + entryToDelete.getQuantitySold());
                itemService.updateItem(itemToUpdate);

                // Delete the sales entry
                salesEntryService.deleteSalesEntry(selectedSalesId);

                // Provide success feedback
                JOptionPane.showMessageDialog(this, "Sales entry deleted successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);

                // clear fields and reload combo box
                clearFields();
                loadComboBox();

                // Return to main page
                new AdminMainPage().setVisible(true);
                this.dispose();

            } catch (IllegalArgumentException e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "An unexpected error occurred: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_DeleteSalesBtnActionPerformed

    private void CancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelBtnActionPerformed
        new AdminMainPage().setVisible(true);;
        this.dispose();
    }//GEN-LAST:event_CancelBtnActionPerformed

    private void salesIdCmbBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salesIdCmbBoxActionPerformed
        String selectedSalesId = (String) salesIdCmbBox.getSelectedItem();

        if (selectedSalesId == null || selectedSalesId.trim().isEmpty()) {
            clearFields();
            return;
        }

        // Populate fields based on the currently selected SalesEntry
        populateFieldsBySalesID();
   
    }//GEN-LAST:event_salesIdCmbBoxActionPerformed

    private void populateFieldsBySalesID() {
        String selectedSalesId = (String) salesIdCmbBox.getSelectedItem();

        if (selectedSalesId == null || selectedSalesId.trim().isEmpty()) {
            clearFields();
            return;
        }

        SalesEntry salesEntry = salesEntryService.getSalesEntryById(selectedSalesId);
        if (salesEntry != null) {
            // Fetch the associated item
            Item item = itemService.getItemById(salesEntry.getItemId());
            if (item != null) {
                // Populate the fields
                fillItemDetails(item);
                ItemIdTxtField.setText(item.getItemId());
                qtySoldField.setText(String.valueOf(salesEntry.getQuantitySold()));
                dateField.setText(salesEntry.getSalesDate().toString());
            } else {
                clearFields();
                JOptionPane.showMessageDialog(this, "Item associated with the sales entry not found.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            clearFields();
            JOptionPane.showMessageDialog(this, "Sales entry not found.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    
    private void loadComboBox() {
        List<SalesEntry> salesEntries = salesEntryService.getAllSalesEntries();
        DefaultComboBoxModel<String> salesIdModel = new DefaultComboBoxModel<>();

        for (SalesEntry entry : salesEntries) {
            salesIdModel.addElement(entry.getEntryId());
        }

        salesIdCmbBox.setModel(salesIdModel);
        salesIdCmbBox.setSelectedIndex(-1);
        clearFields();
    }

    private void fillItemDetails(Item item) {
        if (item != null) {
            ItemIdTxtField.setText(item.getItemId());
        } else {
            ItemIdTxtField.setText("Choose Entry");
        }
    }

    private void clearFields() {
        ItemIdTxtField.setText("Choose Entry");
        dateField.setText("Choose Entry");
        qtySoldField.setText("Choose Entry");
        salesIdCmbBox.setSelectedIndex(-1);
    }



    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminDeleteSales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminDeleteSales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminDeleteSales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminDeleteSales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminDeleteSales().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelBtn;
    private javax.swing.JButton DeleteSalesBtn;
    private javax.swing.JLabel ItemIdTxtField;
    private javax.swing.JLabel dateField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel qtySoldField;
    private javax.swing.JComboBox<String> salesIdCmbBox;
    // End of variables declaration//GEN-END:variables
}
