/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javanexuspots.admin;


import javanexuspots.admin.paymentsDb.AdminEditPayment;
import javanexuspots.admin.paymentsDb.AdminAddPayment;
import javanexuspots.admin.paymentsDb.AdminDeletePayment;
import javanexuspots.admin.itemDb.AdminInventoryLogs;
import javanexuspots.loginPage.LoginForm;
import javanexuspots.services.UserService;
import java.util.*;
import javanexuspots.admin.itemDb.AdminAddItem;
import javanexuspots.admin.itemDb.AdminDeleteItem;
import javanexuspots.admin.itemDb.AdminEditItem;
import javanexuspots.admin.salesDb.AdminAddSales;
import javanexuspots.admin.salesDb.AdminDeleteSales;
import javanexuspots.admin.salesDb.AdminEditSales;
import javanexuspots.admin.supplierDb.AdminAddSupplier;
import javanexuspots.admin.supplierDb.AdminDeleteSupplier;
import javanexuspots.admin.supplierDb.AdminEditSupplier;
import javanexuspots.admin.userDb.AdminAddUser;
import javanexuspots.admin.userDb.AdminDeleteUser;
import javanexuspots.admin.userDb.AdminEditUser;
import javanexuspots.admin.userDb.AdminUserLogs;
import javanexuspots.loginPage.*;
import javanexuspots.models.Item;
import javanexuspots.models.PurchaseOrder;
import javanexuspots.models.Requisition;
import javanexuspots.purchaseManager.AdminPurchaseRequisitionPage;
import javanexuspots.services.ItemService;
import javanexuspots.services.PaymentService;
import javanexuspots.services.PurchaseOrderService;
import javanexuspots.services.RequisitionService;
import javanexuspots.services.SalesEntryService;
import javanexuspots.services.SupplierService;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Asus ROG
 */
public class AdminMainPage extends javax.swing.JFrame {

    private LoginSession loginSession;
    private final PurchaseOrderService purchaseOrderService;
    private final RequisitionService requisitionService;
    private final ItemService itemService;
    
    public AdminMainPage() {
        
        this.loginSession = loginSession;
        purchaseOrderService = new PurchaseOrderService();
        requisitionService = new RequisitionService();
        itemService = new ItemService();

        initComponents();
        loadUserTable();
        loadItemsTable();
        loadSuppliersTable();
        loadSalesTable();
        loadRequisitionTable();
        loadOrderTable();
        loadPaymentsTable();
        loadOrderRequisitionIDs();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        addUserBtn = new javax.swing.JButton();
        editUserBtn = new javax.swing.JButton();
        deleteUserBtn = new javax.swing.JButton();
        userLogsBtn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        itemsTable = new javax.swing.JTable();
        addItemBtn = new javax.swing.JButton();
        editItemBtn = new javax.swing.JButton();
        deleteItemBtn = new javax.swing.JButton();
        inventoryLogsBtn = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        suppliersTable = new javax.swing.JTable();
        addSupplierBtn = new javax.swing.JButton();
        editSupplierBtn = new javax.swing.JButton();
        deleteSupplierBtn = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        salesTable = new javax.swing.JTable();
        addSalesBtn = new javax.swing.JButton();
        editSalesBtn = new javax.swing.JButton();
        deleteSalesBtn = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        requisitionTable = new javax.swing.JTable();
        addRequisitionBtn = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        orderTable = new javax.swing.JTable();
        addOrderBtn = new javax.swing.JButton();
        editOrderBtn = new javax.swing.JButton();
        deleteOrderBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        orderRequisitionIdCmbBox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        orderDatePicker = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        paymentsTable = new javax.swing.JTable();
        addPaymentBtn = new javax.swing.JButton();
        editPaymentBtn = new javax.swing.JButton();
        deletePaymentBtn = new javax.swing.JButton();
        LogoutBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1200, 700));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Welcome, Admin");

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setPreferredSize(new java.awt.Dimension(1200, 700));

        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "User ID", "Name", "Role", "Username", "Password", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(userTable);

        addUserBtn.setText("Add New User");
        addUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserBtnActionPerformed(evt);
            }
        });

        editUserBtn.setText("Edit Existing User");
        editUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editUserBtnActionPerformed(evt);
            }
        });

        deleteUserBtn.setText("Delete Existing User");
        deleteUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteUserBtnActionPerformed(evt);
            }
        });

        userLogsBtn.setText("View User Logs");
        userLogsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userLogsBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1151, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(addUserBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(editUserBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deleteUserBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(userLogsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteUserBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editUserBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addUserBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userLogsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(378, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Users", jPanel2);

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        itemsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Item ID", "Item Code", "Item Name", "Supplier ID", "Price", "Reorder Level", "Stock Level"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(itemsTable);

        addItemBtn.setText("Add New Item");
        addItemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemBtnActionPerformed(evt);
            }
        });

        editItemBtn.setText("Edit Existing Item");
        editItemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editItemBtnActionPerformed(evt);
            }
        });

        deleteItemBtn.setText("Delete Existing Item");
        deleteItemBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteItemBtnActionPerformed(evt);
            }
        });

        inventoryLogsBtn.setText("View Inventory Updates");
        inventoryLogsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inventoryLogsBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(addItemBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(editItemBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deleteItemBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(inventoryLogsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1151, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteItemBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editItemBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addItemBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inventoryLogsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(377, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Items", jPanel3);

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));

        suppliersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Supplier ID", "Supplier Code", "Supplier Name", "Contact Info", "Address", "Item ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(suppliersTable);

        addSupplierBtn.setText("Add New Supplier");
        addSupplierBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSupplierBtnActionPerformed(evt);
            }
        });

        editSupplierBtn.setText("Edit Existing Supplier");
        editSupplierBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editSupplierBtnActionPerformed(evt);
            }
        });

        deleteSupplierBtn.setText("Delete Existing Supplier");
        deleteSupplierBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteSupplierBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(addSupplierBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(editSupplierBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deleteSupplierBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 1151, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteSupplierBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editSupplierBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addSupplierBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(377, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Suppliers", jPanel4);

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));

        salesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Entry ID", "Item ID", "Sales Date", "Quantity Sold"
            }
        ));
        jScrollPane5.setViewportView(salesTable);

        addSalesBtn.setText("Add New Sales Entry");
        addSalesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSalesBtnActionPerformed(evt);
            }
        });

        editSalesBtn.setText("Edit Existing Sales Entry");
        editSalesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editSalesBtnActionPerformed(evt);
            }
        });

        deleteSalesBtn.setText("Delete Existing Sales Entry");
        deleteSalesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteSalesBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(addSalesBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(editSalesBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deleteSalesBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 1151, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteSalesBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editSalesBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addSalesBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(377, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Sales Entry", jPanel5);

        jPanel6.setBackground(new java.awt.Color(204, 204, 204));

        requisitionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Purchase Requisition ID", "Item ID", "Quantity", "Required By Date", "Sales Manager", "SupplierID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(requisitionTable);

        addRequisitionBtn.setText("Update Purchase Requisitions");
        addRequisitionBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRequisitionBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 1151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addRequisitionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addRequisitionBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(377, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Purchase Requistions", jPanel6);

        jPanel7.setBackground(new java.awt.Color(204, 204, 204));

        orderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Purchase Order ID", "Purchase Requisition ID", "Item ID", "Quantity", "Reorder Level", "Status", "Order Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(orderTable);

        addOrderBtn.setText("Submit New Order");
        addOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addOrderBtnActionPerformed(evt);
            }
        });

        editOrderBtn.setText("Edit Existing Order");
        editOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editOrderBtnActionPerformed(evt);
            }
        });

        deleteOrderBtn.setText("Delete Existing Order");
        deleteOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteOrderBtnActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Choose Requisition ID:");

        orderRequisitionIdCmbBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Choose Date of Order:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("Please fill in the fields above to update the database.");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setText("*Note: Please select the desired purchase order by clicking on the row inside the table before choosing edit/delete.");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addComponent(addOrderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(editOrderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(deleteOrderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(9, 9, 9))))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(orderRequisitionIdCmbBox, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(orderDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 1151, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 21, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deleteOrderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(editOrderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addOrderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(orderRequisitionIdCmbBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3))
                            .addComponent(orderDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)))
                .addContainerGap(353, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Puchase Orders", jPanel7);

        jPanel9.setBackground(new java.awt.Color(204, 204, 204));

        paymentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Payment ID", "Purchase Order ID", "Supplier ID", "Amount", "Status", "Payment Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane9.setViewportView(paymentsTable);

        addPaymentBtn.setText("Add New Payment");
        addPaymentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPaymentBtnActionPerformed(evt);
            }
        });

        editPaymentBtn.setText("Edit Existing Payment");
        editPaymentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPaymentBtnActionPerformed(evt);
            }
        });

        deletePaymentBtn.setText("Delete Existing Payment");
        deletePaymentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePaymentBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(addPaymentBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(editPaymentBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deletePaymentBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 1151, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deletePaymentBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editPaymentBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addPaymentBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(377, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Payments", jPanel9);

        LogoutBtn.setText("Logout");
        LogoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LogoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
            .addComponent(jTabbedPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LogoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 892, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LogoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutBtnActionPerformed
        LoginSession.clearSession(); // clear login session
        
        System.out.println("Login session: "+LoginSession.getCurrentUserSession());
        
        this.dispose();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginForm().setVisible(true);
            }
        });
    }//GEN-LAST:event_LogoutBtnActionPerformed

    private void deletePaymentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePaymentBtnActionPerformed
        new AdminDeletePayment().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_deletePaymentBtnActionPerformed

    private void editPaymentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPaymentBtnActionPerformed
        new AdminEditPayment().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_editPaymentBtnActionPerformed

    private void addPaymentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPaymentBtnActionPerformed
        new AdminAddPayment().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_addPaymentBtnActionPerformed

    private void deleteOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteOrderBtnActionPerformed
        int selectedRow = orderTable.getSelectedRow(); // Get selected row from orderTable
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }

        try {
            // Get Purchase Order ID from the selected row
            int purchaseOrderID = Integer.parseInt(orderTable.getValueAt(selectedRow, 0).toString());

            // Confirm the deletion
            int confirm = JOptionPane.showConfirmDialog(
                this,
                "Are you sure you want to delete this Purchase Order?",
                "Confirm Deletion",
                JOptionPane.YES_NO_OPTION
            );

            if (confirm == JOptionPane.YES_OPTION) {
                // Delete the Purchase Order
                purchaseOrderService.deletePurchaseOrder(purchaseOrderID);

                // Show success message
                JOptionPane.showMessageDialog(this, "Purchase Order Deleted Successfully!");

                // Refresh the table
                loadOrderTable();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }

    }//GEN-LAST:event_deleteOrderBtnActionPerformed

    private void editOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editOrderBtnActionPerformed
        int selectedRow = orderTable.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Please select an order to edit.");
            return;
        }

        try {
            // Get the selected Purchase Order ID
            int purchaseOrderID = Integer.parseInt(orderTable.getValueAt(selectedRow, 0).toString());

            // Validate Requisition ID and Date
            String requisitionID = (String) orderRequisitionIdCmbBox.getSelectedItem();
            Date date = orderDatePicker.getDate();

            if (requisitionID == null || date == null) {
                JOptionPane.showMessageDialog(this, "Please select both a Requisition ID and Date.");
                return;
            }

            // Fetch related requisition and item details
            Requisition req = requisitionService.getRequisitionById(requisitionID);
            if (req == null) {
                JOptionPane.showMessageDialog(this, "Requisition not found!");
                return;
            }

            String itemID = req.getItemId();
            int quantity = req.getQuantity();

            Item item = itemService.getItemById(itemID);
            int reorderLevel = (item != null) ? item.getReorderLevel() : 0;

            // Get current status from the table
            String currentStatus = orderTable.getValueAt(selectedRow, 5).toString();

            // Update the Purchase Order
            PurchaseOrder updatedOrder = new PurchaseOrder(
                purchaseOrderID,
                requisitionID,
                itemID,
                quantity,
                reorderLevel,
                currentStatus,
                date
            );

            purchaseOrderService.updatePurchaseOrder(updatedOrder);
            loadOrderTable(); // Reload the table
            clearOrderPage(); // Clear fields

            JOptionPane.showMessageDialog(this, "Purchase Order updated successfully!");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "An error occurred while editing the order: " + e.getMessage());
        }
    }//GEN-LAST:event_editOrderBtnActionPerformed

    private void addOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addOrderBtnActionPerformed
        try {
            // Generate a new Purchase Order ID
            int purchaseOrderID = purchaseOrderService.generateNextPurchaseOrderId();

            // Get selected Requisition ID and Date
            String requisitionID = (String) orderRequisitionIdCmbBox.getSelectedItem();
            Date date = orderDatePicker.getDate();

            if (requisitionID == null || date == null) {
                JOptionPane.showMessageDialog(this, "Please select a Requisition ID and Date.");
                return;
            }

            // Fetch ItemID and Quantity from Requisition
            Requisition req = requisitionService.getRequisitionById(requisitionID);
            if (req == null) {
                JOptionPane.showMessageDialog(this, "Requisition not found.");
                return;
            }

            String itemID = req.getItemId();
            int quantity = req.getQuantity();

            // Fetch Reorder Level from Item
            Item item = itemService.getItemById(itemID);
            int reorderLevel = (item != null) ? item.getReorderLevel() : 0;

            // Create a new Purchase Order
            PurchaseOrder order = new PurchaseOrder(
                purchaseOrderID,
                requisitionID,
                itemID,
                quantity,
                reorderLevel,
                "Pending",
                date
            );

            // Add the Purchase Order
            purchaseOrderService.addPurchaseOrder(order);
            JOptionPane.showMessageDialog(this, "Purchase Order Added Successfully!");

            // Refresh the Purchase Order table
            loadOrderTable();

            // Clear the form
            clearOrderPage();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_addOrderBtnActionPerformed

    private void addRequisitionBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRequisitionBtnActionPerformed
        new AdminPurchaseRequisitionPage(loginSession).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_addRequisitionBtnActionPerformed

    private void deleteSalesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteSalesBtnActionPerformed
        new AdminDeleteSales().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_deleteSalesBtnActionPerformed

    private void editSalesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editSalesBtnActionPerformed
        new AdminEditSales().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_editSalesBtnActionPerformed

    private void addSalesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSalesBtnActionPerformed
        new AdminAddSales().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_addSalesBtnActionPerformed

    private void deleteSupplierBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteSupplierBtnActionPerformed
        new AdminDeleteSupplier().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_deleteSupplierBtnActionPerformed

    private void editSupplierBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editSupplierBtnActionPerformed
        new AdminEditSupplier().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_editSupplierBtnActionPerformed

    private void addSupplierBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSupplierBtnActionPerformed
        new AdminAddSupplier().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_addSupplierBtnActionPerformed

    private void deleteItemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteItemBtnActionPerformed
        new AdminDeleteItem().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_deleteItemBtnActionPerformed

    private void editItemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editItemBtnActionPerformed
        new AdminEditItem().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_editItemBtnActionPerformed

    private void addItemBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemBtnActionPerformed
        new AdminAddItem().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_addItemBtnActionPerformed

    private void userLogsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userLogsBtnActionPerformed
        new AdminUserLogs().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_userLogsBtnActionPerformed

    private void deleteUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteUserBtnActionPerformed
        new AdminDeleteUser().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_deleteUserBtnActionPerformed

    private void editUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editUserBtnActionPerformed
        new AdminEditUser().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_editUserBtnActionPerformed

    private void addUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserBtnActionPerformed
        new AdminAddUser().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_addUserBtnActionPerformed

    private void inventoryLogsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inventoryLogsBtnActionPerformed
        new AdminInventoryLogs().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_inventoryLogsBtnActionPerformed

    private void loadUserTable() {
        DefaultTableModel dtm = (DefaultTableModel) userTable.getModel();
        dtm.setRowCount(0); //clear table

        UserService userManagementService = new UserService();
        List<Object[]> userRows = userManagementService.getAllUsersForTable();

        for (Object[] userRow : userRows) {
            dtm.addRow(userRow);
        }
    }
    
    private void loadItemsTable() {
        DefaultTableModel dtm = (DefaultTableModel) itemsTable.getModel();
        dtm.setRowCount(0); // clear table

        ItemService itemService = new ItemService();
        List<Object[]> itemRows = itemService.getAllItemsForTable(); // Get data for the table

        for (Object[] itemRow : itemRows) {
            dtm.addRow(itemRow); 
        }
    }
    
    private void loadSuppliersTable() {
        DefaultTableModel dtm = (DefaultTableModel) suppliersTable.getModel();
        dtm.setRowCount(0); // clear table

        SupplierService supplierService = new SupplierService();
        List<Object[]> supplierRows = supplierService.getAllSuppliersForTable(); // get data for the table

        for (Object[] supplierRow : supplierRows) {
            dtm.addRow(supplierRow); 
        }
    }

    private void loadSalesTable() {
        DefaultTableModel dtm = (DefaultTableModel) salesTable.getModel();
        dtm.setRowCount(0); // clear table

        SalesEntryService salesService = new SalesEntryService();
        List<Object[]> salesRows = salesService.getAllSalesForTable(); // get data for the table

        for (Object[] salesRow : salesRows) {
            dtm.addRow(salesRow); 
        }
    }

    private void loadRequisitionTable() {
        DefaultTableModel dtm = (DefaultTableModel) requisitionTable.getModel();
        dtm.setRowCount(0); // clear table

        RequisitionService requisitionService = new RequisitionService();
        List<Object[]> requisitionRows = requisitionService.getAllRequisitionsForTable(); // get data for the table

        for (Object[] requisitionRow : requisitionRows) {
            dtm.addRow(requisitionRow); 
        }
    }

    private void loadOrderTable() {
        DefaultTableModel dtm = (DefaultTableModel) orderTable.getModel();
        dtm.setRowCount(0); // clear table

        PurchaseOrderService orderService = new PurchaseOrderService();
        List<Object[]> orderRows = orderService.getAllPurchaseOrdersForTable(); // get data for the table

        for (Object[] orderRow : orderRows) {
            dtm.addRow(orderRow); 
        }
    }
    
    private void loadPaymentsTable() {
        DefaultTableModel dtm = (DefaultTableModel) paymentsTable.getModel();
        dtm.setRowCount(0); // clear table

        PaymentService paymentService = new PaymentService();
        List<Object[]> paymentRows = paymentService.getAllPaymentsForTable(); // get data for the table

        for (Object[] paymentRow : paymentRows) {
            dtm.addRow(paymentRow); 
        }
    }
    
    private void clearOrderPage() {
        orderRequisitionIdCmbBox.setSelectedIndex(-1);
        orderDatePicker.setDate(null);
        orderTable.clearSelection();
    }
    
    private void loadOrderRequisitionIDs() {
        orderRequisitionIdCmbBox.removeAllItems(); // clear existing items
        RequisitionService requisitionService = new RequisitionService();
        List<Requisition> requisitions = requisitionService.getAllRequisitions();

        // add each requisition ID to the combo box
        for (Requisition req : requisitions) {
            orderRequisitionIdCmbBox.addItem(req.getRequisitionId());
        }
    }

    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminAddPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminAddPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminAddPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminAddPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminMainPage().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton LogoutBtn;
    private javax.swing.JButton addItemBtn;
    private javax.swing.JButton addOrderBtn;
    private javax.swing.JButton addPaymentBtn;
    private javax.swing.JButton addRequisitionBtn;
    private javax.swing.JButton addSalesBtn;
    private javax.swing.JButton addSupplierBtn;
    private javax.swing.JButton addUserBtn;
    private javax.swing.JButton deleteItemBtn;
    private javax.swing.JButton deleteOrderBtn;
    private javax.swing.JButton deletePaymentBtn;
    private javax.swing.JButton deleteSalesBtn;
    private javax.swing.JButton deleteSupplierBtn;
    private javax.swing.JButton deleteUserBtn;
    private javax.swing.JButton editItemBtn;
    private javax.swing.JButton editOrderBtn;
    private javax.swing.JButton editPaymentBtn;
    private javax.swing.JButton editSalesBtn;
    private javax.swing.JButton editSupplierBtn;
    private javax.swing.JButton editUserBtn;
    private javax.swing.JButton inventoryLogsBtn;
    private javax.swing.JTable itemsTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private com.toedter.calendar.JDateChooser orderDatePicker;
    private javax.swing.JComboBox<String> orderRequisitionIdCmbBox;
    private javax.swing.JTable orderTable;
    private javax.swing.JTable paymentsTable;
    private javax.swing.JTable requisitionTable;
    private javax.swing.JTable salesTable;
    private javax.swing.JTable suppliersTable;
    private javax.swing.JButton userLogsBtn;
    private javax.swing.JTable userTable;
    // End of variables declaration//GEN-END:variables
}
