/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javanexuspots.admin.paymentsDb;

import java.text.SimpleDateFormat;
import java.util.List;
import javanexuspots.admin.AdminMainPage;
import javanexuspots.models.Payment;
import javanexuspots.models.PurchaseOrder;
import javanexuspots.models.Supplier;
import javanexuspots.services.PaymentService;
import javanexuspots.services.PurchaseOrderService;
import javanexuspots.services.SupplierService;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Asus ROG
 */
public class AdminEditPayment extends javax.swing.JFrame {

    private PaymentService paymentService;
    private SupplierService supplierService;
    private PurchaseOrderService purchaseOrderService;
    private SimpleDateFormat dateFormat;
    

    /**
     * Creates new form AdminAddUser
     */
    public AdminEditPayment() {
        initComponents();
        paymentService = new PaymentService();
        supplierService = new SupplierService();
        purchaseOrderService = new PurchaseOrderService();
        dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        loadComboBoxes();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        EditPaymentBtn = new javax.swing.JButton();
        CancelBtn = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        amountTxtField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        statusCmbBox = new javax.swing.JComboBox<>();
        supplierIdCmbBox = new javax.swing.JComboBox<>();
        purchaseOrderIdCmbBox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        paymentIdCmbBox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        paymentDatePicker = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Edit Existing Payments");

        EditPaymentBtn.setBackground(new java.awt.Color(51, 102, 255));
        EditPaymentBtn.setForeground(new java.awt.Color(255, 255, 255));
        EditPaymentBtn.setText("Edit Payment");
        EditPaymentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditPaymentBtnActionPerformed(evt);
            }
        });

        CancelBtn.setBackground(new java.awt.Color(153, 153, 153));
        CancelBtn.setForeground(new java.awt.Color(0, 0, 0));
        CancelBtn.setText("Cancel");
        CancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelBtnActionPerformed(evt);
            }
        });

        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Payment ID:");

        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Purchase Order ID:");

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Supplier ID:");

        amountTxtField.setToolTipText("");
        amountTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountTxtFieldActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Amount:");

        statusCmbBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Paid", "Unpaid" }));

        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Status:");

        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Payment Date: ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(EditPaymentBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(223, 223, 223))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel3))
                                .addGap(22, 22, 22)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(supplierIdCmbBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(purchaseOrderIdCmbBox, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(22, 22, 22)
                                .addComponent(paymentIdCmbBox, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(52, 52, 52)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(amountTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(paymentDatePicker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(23, 23, 23)
                                .addComponent(statusCmbBox, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(statusCmbBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addComponent(jLabel8)
                    .addComponent(paymentIdCmbBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(purchaseOrderIdCmbBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(supplierIdCmbBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EditPaymentBtn)
                            .addComponent(CancelBtn))
                        .addGap(72, 72, 72))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(amountTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(paymentDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(126, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EditPaymentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditPaymentBtnActionPerformed
        String selectedPaymentId = (String) paymentIdCmbBox.getSelectedItem();
        String selectedSupplierId = (String) supplierIdCmbBox.getSelectedItem(); // supplierID as String
        String selectedPurchaseOrderId = (String) purchaseOrderIdCmbBox.getSelectedItem(); // purchaseOrderID as String
        String amountText = amountTxtField.getText().trim();
        String selectedStatus = (String) statusCmbBox.getSelectedItem();

        // validation for commas in all text fields
        if (amountTxtField.getText().contains(",")) {
            JOptionPane.showMessageDialog(this, "Fields cannot contain commas (,).", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            // get date from the date picker and format it
            java.util.Date paymentDate = paymentDatePicker.getDate();
            if (paymentDate == null) {
                JOptionPane.showMessageDialog(this, "Please select a payment date.", "Validation Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            String formattedDate = dateFormat.format(paymentDate);

            // validate inputs
            if (selectedPaymentId == null || selectedPaymentId.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please select a payment ID.", "Validation Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (selectedSupplierId == null || selectedPurchaseOrderId == null || 
                amountText.isEmpty() || selectedStatus == null) {
                throw new IllegalArgumentException("All fields are required.");
            }

            if (!amountText.matches("\\d+(\\.\\d+)?")) {
                throw new IllegalArgumentException("Invalid amount format. Please use numbers only.");
            }

            // create updated payment object
            Payment updatedPayment = new Payment(
                Integer.parseInt(selectedPaymentId),  // paymentID as int
                Integer.parseInt(selectedPurchaseOrderId), // purchaseOrderID as int
                selectedSupplierId,                // supplierID as String
                Double.parseDouble(amountText),    // amount
                selectedStatus,                    // status
                formattedDate                      // payment date
            );

            // update the payment
            paymentService.updatePayment(updatedPayment);
            JOptionPane.showMessageDialog(this, "Payment updated successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
            clearFields();

            // return to admin page
            new AdminMainPage().setVisible(true);
            this.dispose();

        } catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Validation Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "An unexpected error occurred: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }

    }//GEN-LAST:event_EditPaymentBtnActionPerformed

    private void CancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelBtnActionPerformed
        new AdminMainPage().setVisible(true);;
        this.dispose();
    }//GEN-LAST:event_CancelBtnActionPerformed

    private void amountTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amountTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amountTxtFieldActionPerformed

    private void loadComboBoxes() {
        try {
            // load all payments for the payment ID combo box
            List<Payment> payments = paymentService.getAllPayments();
            DefaultComboBoxModel<String> paymentIdModel = new DefaultComboBoxModel<>();
            for (Payment payment : payments) {
                paymentIdModel.addElement(String.valueOf(payment.getPaymentID()));
            }
            paymentIdCmbBox.setModel(paymentIdModel);

            // load purchase order IDs
            DefaultComboBoxModel<String> purchaseOrderIdModel = new DefaultComboBoxModel<>();
            List<PurchaseOrder> purchaseOrders = purchaseOrderService.getAllPurchaseOrders();
            for (PurchaseOrder order : purchaseOrders) {
                purchaseOrderIdModel.addElement(String.valueOf(order.getPurchaseOrderID()));
            }
            purchaseOrderIdCmbBox.setModel(purchaseOrderIdModel);

            // load suppliers
            DefaultComboBoxModel<String> supplierIdModel = new DefaultComboBoxModel<>();
            List<Supplier> suppliers = supplierService.getAllSuppliers();
            for (Supplier supplier : suppliers) {
                String displayText = supplier.getSupplierId() + " (" + supplier.getSupplierName() + ")";
                supplierIdModel.addElement(displayText);
            }
            supplierIdCmbBox.setModel(supplierIdModel);

            // add listener for payment selection after combo boxes are set
            paymentIdCmbBox.addActionListener(evt -> {
                String selectedPaymentId = (String) paymentIdCmbBox.getSelectedItem();
                if (selectedPaymentId != null && !selectedPaymentId.isEmpty()) {
                    try {
                        int paymentId = Integer.parseInt(selectedPaymentId);
                        Payment selectedPayment = paymentService.getPaymentById(paymentId);
                        if (selectedPayment != null) {
                            // populate fields
                            amountTxtField.setText(String.valueOf(selectedPayment.getAmount()));
                            statusCmbBox.setSelectedItem(selectedPayment.getStatus());

                            // set date
                            try {
                                java.util.Date date = dateFormat.parse(selectedPayment.getPaymentDate());
                                paymentDatePicker.setDate(date);
                            } catch (Exception e) {
                                System.err.println("Error parsing date: " + e.getMessage());
                            }

                            // match supplier
                            String supplierFromPayment = selectedPayment.getSupplierID(); 
                            // If stored as "S001 (Alpha Supplies)" you can directly select
                            supplierIdCmbBox.setSelectedItem(supplierFromPayment);

                            // match purchase order
                            purchaseOrderIdCmbBox.setSelectedItem(String.valueOf(selectedPayment.getPurchaseOrderID()));
                        }
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this,
                            "Error loading payment details: " + e.getMessage(),
                            "Error",
                            JOptionPane.ERROR_MESSAGE);
                    }
                }
            });

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                "Error loading data: " + e.getMessage(),
                "Error",
                JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }


    
    private void clearFields() {
        paymentIdCmbBox.setSelectedIndex(-1);
        supplierIdCmbBox.setSelectedIndex(-1);
        purchaseOrderIdCmbBox.setSelectedIndex(-1);
        amountTxtField.setText("");
        statusCmbBox.setSelectedIndex(-1);
        paymentDatePicker.setDate(null);
    }



    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminEditPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminEditPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminEditPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminEditPayment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminEditPayment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelBtn;
    private javax.swing.JButton EditPaymentBtn;
    private javax.swing.JTextField amountTxtField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private com.toedter.calendar.JDateChooser paymentDatePicker;
    private javax.swing.JComboBox<String> paymentIdCmbBox;
    private javax.swing.JComboBox<String> purchaseOrderIdCmbBox;
    private javax.swing.JComboBox<String> statusCmbBox;
    private javax.swing.JComboBox<String> supplierIdCmbBox;
    // End of variables declaration//GEN-END:variables
}
