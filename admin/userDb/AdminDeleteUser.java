/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package javanexuspots.admin.userDb;

import java.util.List;
import javanexuspots.admin.AdminMainPage;
import javanexuspots.loginPage.LoginSession;
import javanexuspots.models.User;
import javanexuspots.services.UserLogService;
import javanexuspots.services.UserService;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Asus ROG
 */
public class AdminDeleteUser extends javax.swing.JFrame {

    /**
     * Creates new form AdminAddUser
     */
    public AdminDeleteUser() {
        initComponents();
        loadUserIDComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        DeleteUserBtn = new javax.swing.JButton();
        CancelBtn = new javax.swing.JButton();
        userIDCmbBox = new javax.swing.JComboBox<>();
        usernameField = new javax.swing.JLabel();
        emailField = new javax.swing.JLabel();
        fullNameField = new javax.swing.JLabel();
        roleField = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("UserID:");

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Username:");

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Role:");

        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Full Name:");

        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Email:");

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Delete Existing User");

        DeleteUserBtn.setBackground(new java.awt.Color(255, 0, 0));
        DeleteUserBtn.setForeground(new java.awt.Color(255, 255, 255));
        DeleteUserBtn.setText("Delete User");
        DeleteUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteUserBtnActionPerformed(evt);
            }
        });

        CancelBtn.setBackground(new java.awt.Color(153, 153, 153));
        CancelBtn.setForeground(new java.awt.Color(0, 0, 0));
        CancelBtn.setText("Cancel");
        CancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelBtnActionPerformed(evt);
            }
        });

        userIDCmbBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userIDCmbBoxActionPerformed(evt);
            }
        });

        usernameField.setBackground(new java.awt.Color(60, 60, 60));
        usernameField.setForeground(new java.awt.Color(0, 0, 0));
        usernameField.setText("Choose User");
        usernameField.setToolTipText("");

        emailField.setBackground(new java.awt.Color(60, 60, 60));
        emailField.setForeground(new java.awt.Color(0, 0, 0));
        emailField.setText("Choose User");

        fullNameField.setBackground(new java.awt.Color(60, 60, 60));
        fullNameField.setForeground(new java.awt.Color(0, 0, 0));
        fullNameField.setText("Choose User");
        fullNameField.setToolTipText("");

        roleField.setBackground(new java.awt.Color(60, 60, 60));
        roleField.setForeground(new java.awt.Color(0, 0, 0));
        roleField.setText("Choose User");
        roleField.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(userIDCmbBox, 0, 119, Short.MAX_VALUE)
                                        .addGap(54, 54, 54))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(usernameField)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7))
                                .addGap(73, 73, 73)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(emailField)
                                    .addComponent(fullNameField))
                                .addGap(181, 181, 181))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(roleField)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(CancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(DeleteUserBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(223, 223, 223))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(userIDCmbBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(fullNameField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7)
                    .addComponent(emailField)
                    .addComponent(usernameField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(roleField))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DeleteUserBtn)
                    .addComponent(CancelBtn))
                .addGap(72, 72, 72))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DeleteUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteUserBtnActionPerformed
        String userID = (String) userIDCmbBox.getSelectedItem();

        // ensure user is selected
        if (userID == null || userID.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please select a user to delete.", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this user?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            UserService userManagementService = new UserService();
            List<User> users = userManagementService.loadData();

            // log user details
            User userToDelete = null;
            for (User user : users) {
                if (user.getUserID().equals(userID)) {
                    userToDelete = user;
                    break;  // exit loop once user is found
                }
            }

            if (userToDelete != null) {
                users.remove(userToDelete);
                userManagementService.saveData(users); // save updated list

                // log the deletion
                UserLogService logService = new UserLogService();
                String adminUsername = LoginSession.getCurrentUserSession();
                logService.writeUserActionLog(
                    userToDelete.getUsername(),
                    adminUsername,
                    UserLogService.UserAction.USER_DELETED,
                    "" // empty details since its deleting a user
                );

                JOptionPane.showMessageDialog(this, "User deleted successfully", "Success", JOptionPane.INFORMATION_MESSAGE);

                // clear fields and reload ComboBox
                usernameField.setText("");
                fullNameField.setText("");
                emailField.setText("");
                roleField.setText("");
                loadUserIDComboBox();
                new AdminMainPage().setVisible(true);
                this.dispose();
            } else {
                JOptionPane.showMessageDialog(this, "Failed to delete: User not found.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_DeleteUserBtnActionPerformed

    private void CancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelBtnActionPerformed
        new AdminMainPage().setVisible(true);;
        this.dispose();
    }//GEN-LAST:event_CancelBtnActionPerformed

    private void userIDCmbBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userIDCmbBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userIDCmbBoxActionPerformed

    private void loadUserIDComboBox() {
        UserService userManagementService = new UserService();
        List<User> users = userManagementService.loadData();
        DefaultComboBoxModel<String> userIdModel = new DefaultComboBoxModel<>();

        for (User user : users) {
            userIdModel.addElement(user.getUserID());
        }

        userIDCmbBox.setModel(userIdModel);

        // populate fields when userID is selected
        userIDCmbBox.addActionListener(evt -> {
            String selectedUserId = (String) userIDCmbBox.getSelectedItem();
            if (selectedUserId != null) {
                for (User user : users) {
                    if (user.getUserID().equals(selectedUserId)) {
                        usernameField.setText(user.getUsername());
                        fullNameField.setText(user.getName());
                        emailField.setText(user.getEmail());
                        String roleName;
                        switch (user.getRole()) {
                            case "ADM":
                                roleName = "Administrator (ADM)";
                                break;
                            case "SM":
                                roleName = "Sales Manager (SM)";
                                break;
                            case "IM":
                                roleName = "Inventory Manager (IM)";
                                break;
                            case "PM":
                                roleName = "Purchase Manager (PM)";
                                break;
                            case "FM":
                                roleName = "Finance Manager (FM)";
                                break;
                            default:
                                roleName = "Error unknown role";
                        }
                        roleField.setText(roleName);
                        break;
                    }
                }
            }
        });
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminDeleteUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminDeleteUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminDeleteUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminDeleteUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminDeleteUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelBtn;
    private javax.swing.JButton DeleteUserBtn;
    private javax.swing.JLabel emailField;
    private javax.swing.JLabel fullNameField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel roleField;
    private javax.swing.JComboBox<String> userIDCmbBox;
    private javax.swing.JLabel usernameField;
    // End of variables declaration//GEN-END:variables
}
